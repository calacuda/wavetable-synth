; from: https://github.com/AkiyukiOkayasu/pico-PDM/blob/main/src/i2s.pio (with help from google translate)
; MCLK output
; Akiyuki Okayasu
; fs: 48kHz or 96kHz
; Output MCLK freq: 64fs
; PIO Clock freq: 15.36MHz (320fs@48kHz), 30.72MHz (320fs@96kHz)
; To reduce jitter, it is desirable to set the PIO frequency division ratio to an integer.
; When fs=48kHz, it can be made into an integer by setting sysClk: 153.6MHz or 230.4MHz.
; When fs=96kHz, it can be made into an integer by setting sysClk: 153.6MHz or 307.2MHz.

.program mclk_output

.wrap_target
    set pins, 0b1 [2]
    set pins, 0b0 [1]
.wrap

; I2S send Master
; Akiyuki Okayasu
; fs: 48kHz or 96kHz
; PIO Clock freq: 15.36MHz (320fs@48kHz), 30.72MHz (320fs@96kHz)
; Bit depth: 32bit
; To reduce jitter, it is desirable to set the PIO frequency division ratio to an integer.
; When fs=48kHz, it can be made into an integer by setting sysClk: 76.8MHz or 153.6MHz or 230.4MHz or 384MHz.
; When fs=96kHz, it can be made into an integer by setting sysClk: 153.6MHz or 307.2MHz. 

.program i2s_send_master
.side_set 2

            ;                  /----LRCLK
            ;                  |/---BCLK    
.wrap_target    
    set y, 30 [2]       side 0b01
loopLch:
    out pins, 1 [1]     side 0b00;From MSB to one before LSB
    jmp y-- loopLch [2] side 0b01
    out pins, 1 [1]     side 0b10;LSB
    set y, 30 [2]       side 0b11
loopRch:
    out pins, 1 [1]     side 0b10;From MSB to one before LSB
    jmp y-- loopRch [2] side 0b11
    out pins, 1 [1]     side 0b00;LSB
.wrap

; I2S receive
; Master
; fs: 48kHz
; sysClk: 153.6MHz
; PIO Clock freq: 15.36MHz (320fs)
; Bit depth: 32bit
; Akiyuki Okayasu

.program i2s_receive_master
.side_set 2

            ;                  /----LRCLK
            ;                  |/---BCLK            
.wrap_target
    set y, 30 [1]       side 0b00
loopLch:
    nop                 side 0b01;Add 1 clock margin before in instruction
    in pins, 1          side 0b01;From MSB to one before LSB
    jmp y-- loopLch [2] side 0b00
    nop                 side 0b11;Add 1 clock margin before in instruction
    in pins, 1          side 0b11;LSB
    push                side 0b10
    set y, 30 [1]       side 0b10
loopRch:
    nop                 side 0b11;Add 1 clock margin before in instruction
    in pins, 1          side 0b11;From MSB to one before LSB
    jmp y-- loopRch [2] side 0b10
    nop                 side 0b01;Add 1 clock margin before in instruction
    in pins, 1          side 0b01;LSB
    push                side 0b00
.wrap
